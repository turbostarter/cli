name: CI / Publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_VERSION: 20.x

jobs:
  tests:
    name: ðŸ§ª Tests
    uses: ./.github/workflows/tests.yml

  publish:
    name: ðŸ“¦ Publish
    runs-on: ubuntu-latest
    needs: [tests]
    permissions:
      contents: write
      id-token: write
      issues: write
      pull-requests: write
    steps:
      - name: âœ… Checkout code
        uses: actions/checkout@v4

      - name: ðŸ”¨ Setup
        uses: ./.github/workflows/setup
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: ðŸ“¦ Build
        run: pnpm build

      - name: ðŸš€ Create release
        id: changeset
        uses: changesets/action@v1.4.1
        with:
          commit: "chore(release): ðŸš€ version packages"
          title: "chore(release): ðŸš€ version packages"
          publish: npx changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: ðŸŽ¨ Fix formatting
        if: steps.changeset.outputs.hasChangesets == 'true'
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git checkout changeset-release/main
          pnpm lint:fix
          git add .
          # Check if there are staged changes before committing and pushing
          if ! git diff --staged --quiet; then
            git commit -m "chore(release): ðŸŽ¨ fix formatting"
            git push origin changeset-release/main
          else
            echo "No formatting changes to commit."
          fi
